<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.Act_participantMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.domain.Act_participant">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stu_id" jdbcType="INTEGER" property="stu_Id" />
    <result column="act_id" jdbcType="INTEGER" property="act_Id" />
    <result column="posttime" jdbcType="TIMESTAMP" property="posttime" />
    <result column="jointime" jdbcType="TIMESTAMP" property="jointime" />
    <result column="checktime" jdbcType="TIMESTAMP" property="checktime" />
    <result column="score_id" jdbcType="INTEGER" property="scoreId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, stu_id, act_id, posttime, jointime, checktime, score_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from act_participant
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByStuAct" resultType="com.example.demo.domain.Act_participant">
  	select * from act_participant where stu_id = #{stu_id,jdbcType=INTEGER} 
  	and act_id = #{act_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from act_participant
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.domain.Act_participant">
    insert into act_participant (id, stu_id, act_id, 
      posttime, jointime, checktime, 
      score_id)
    values (#{id,jdbcType=INTEGER}, #{stuId,jdbcType=INTEGER}, #{actId,jdbcType=INTEGER}, 
      #{posttime,jdbcType=TIMESTAMP}, #{jointime,jdbcType=TIMESTAMP}, #{checktime,jdbcType=TIMESTAMP}, 
      #{scoreId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.domain.Act_participant">
    insert into act_participant
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="actId != null">
        act_id,
      </if>
      <if test="posttime != null">
        posttime,
      </if>
      <if test="jointime != null">
        jointime,
      </if>
      <if test="checktime != null">
        checktime,
      </if>
      <if test="scoreId != null">
        score_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="actId != null">
        #{actId,jdbcType=INTEGER},
      </if>
      <if test="posttime != null">
        #{posttime,jdbcType=TIMESTAMP},
      </if>
      <if test="jointime != null">
        #{jointime,jdbcType=TIMESTAMP},
      </if>
      <if test="checktime != null">
        #{checktime,jdbcType=TIMESTAMP},
      </if>
      <if test="scoreId != null">
        #{scoreId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.Act_participant">
    update act_participant
    <set>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=INTEGER},
      </if>
      <if test="actId != null">
        act_id = #{actId,jdbcType=INTEGER},
      </if>
      <if test="posttime != null">
        posttime = #{posttime,jdbcType=TIMESTAMP},
      </if>
      <if test="jointime != null">
        jointime = #{jointime,jdbcType=TIMESTAMP},
      </if>
      <if test="checktime != null">
        checktime = #{checktime,jdbcType=TIMESTAMP},
      </if>
      <if test="scoreId != null">
        score_id = #{scoreId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.Act_participant">
    update act_participant
    set stu_id = #{stuId,jdbcType=INTEGER},
      act_id = #{actId,jdbcType=INTEGER},
      posttime = #{posttime,jdbcType=TIMESTAMP},
      jointime = #{jointime,jdbcType=TIMESTAMP},
      checktime = #{checktime,jdbcType=TIMESTAMP},
      score_id = #{scoreId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>