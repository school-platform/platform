<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.StudentsinfosMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.domain.Studentsinfos">
    <id column="studentid" jdbcType="INTEGER" property="studentid" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="collegeid" jdbcType="INTEGER" property="collegeid" />
    <result column="majorid" jdbcType="INTEGER" property="majorid" />
  </resultMap>
  <sql id="Base_Column_List">
    studentid, phone, birthday, message, grade, collegeid, majorid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from studentsinfos
    where studentid = #{studentid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from studentsinfos
    where studentid = #{studentid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.domain.Studentsinfos">
    insert into studentsinfos (studentid, phone, birthday, 
      message, grade, collegeid, 
      majorid)
    values (#{studentid,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, 
      #{message,jdbcType=VARCHAR}, #{grade,jdbcType=INTEGER}, #{collegeid,jdbcType=INTEGER}, 
      #{majorid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.domain.Studentsinfos">
    insert into studentsinfos
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentid != null">
        studentid,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="collegeid != null">
        collegeid,
      </if>
      <if test="majorid != null">
        majorid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentid != null">
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="collegeid != null">
        #{collegeid,jdbcType=INTEGER},
      </if>
      <if test="majorid != null">
        #{majorid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.Studentsinfos">
    update studentsinfos
    <set>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="collegeid != null">
        collegeid = #{collegeid,jdbcType=INTEGER},
      </if>
      <if test="majorid != null">
        majorid = #{majorid,jdbcType=INTEGER},
      </if>
    </set>
    where studentid = #{studentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.Studentsinfos">
    update studentsinfos
    set phone = #{phone,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      message = #{message,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER},
      collegeid = #{collegeid,jdbcType=INTEGER},
      majorid = #{majorid,jdbcType=INTEGER}
    where studentid = #{studentid,jdbcType=INTEGER}
  </update>
</mapper>